trigger:
  branches:
    include:
      - main
  paths:
    include:
      - $(System.DefaultWorkingDirectory)/IronPdfDemo/*

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)/IronPdfDemo'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
    - displayName: Build Stage
      variables:
        NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
      pool:
        vmImage: windows-latest
      steps:
        - checkout: self
        - script: dotnet nuget locals global-packages -l
          displayName: 'dotnet nuget locals global-packages -l'

        - task: DotNetCoreCLI@2
          displayName: dotnet restore
          condition: ne(variables.CACHE_RESTORED, 'true')
          inputs:
            command: restore
            projects: $(System.DefaultWorkingDirectory)/IronPdfDemo.sln
        

        - task: DotNetCoreCLI@2
          displayName: dotnet build
          inputs:
            projects: >
              $(workingDirectory)/*.csproj
            arguments: --configuration Release   
        
        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: publish
            publishWebProjects: false
            projects: >
              $(workingDirectory)/*.csproj
            arguments: --configuration Release --output $(Build.ArtifactStagingDirectory)
            modifyOutputPath: false

        - task: PublishPipelineArtifact@1
          displayName: Publish Pipeline Artifact
          inputs:
            path: $(Build.ArtifactStagingDirectory)
            artifactName: azurefunction

  - stage: Deploy
    displayName: DEPLOY_SANDPIT
    dependsOn: Build
    condition: succeeded()
    jobs:
    - displayName: Deploy Stage
      steps:
        - task: AzureFunctionApp@1
          displayName: Azure functions app deploy
          inputs:
            azureSubscription: ${{parameters.AZURE_CONNECTION}}
            appType: functionApp
            appName: ironpdfdemo 
            package: $(Pipeline.Workspace)/azurefunction/a.zip
            deploymentMethod: zipDeploy
            appSettings: >
              -FUNCTIONS_EXTENSION_VERSION "~4"
              $(appSettings)